<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="AirplaneMode.NotAvailable" xml:space="preserve">
    <value>Airplane Mode is not available :(</value>
  </data>
  <data name="AirplaneModeOff" xml:space="preserve">
    <value>Airplane mode off</value>
  </data>
  <data name="AirplaneModeOn" xml:space="preserve">
    <value>Airplane mode on</value>
  </data>
  <data name="Align" xml:space="preserve">
    <value>Align to default position</value>
  </data>
  <data name="AudioFlyoutHelper.NoDevices" xml:space="preserve">
    <value>No Connected Audio Devices</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Enums.DefaultFlyout.ModernFlyouts" xml:space="preserve">
    <value>ModernFlyouts</value>
  </data>
  <data name="Enums.DefaultFlyout.None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="Enums.DefaultFlyout.WindowsDefault" xml:space="preserve">
    <value>Windows default</value>
  </data>
  <data name="Enums.Orientation.Horizontal" xml:space="preserve">
    <value>Horizontal</value>
  </data>
  <data name="Enums.Orientation.Vertical" xml:space="preserve">
    <value>Vertical</value>
  </data>
  <data name="ExitItem" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="ExitItemDescription" xml:space="preserve">
    <value>Exit the app safely</value>
  </data>
  <data name="GeneralSettings" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="LockKeysFlyoutHelper.InsertMode" xml:space="preserve">
    <value>Insert Mode</value>
  </data>
  <data name="LockKeysFlyoutHelper.KeyIsOff" xml:space="preserve">
    <value>{0} is off</value>
    <comment>E.g. CapsLock is off</comment>
  </data>
  <data name="LockKeysFlyoutHelper.KeyIsOn" xml:space="preserve">
    <value>{0} is on</value>
    <comment>E.g. CapsLock is on</comment>
  </data>
  <data name="LockKeysFlyoutHelper.OvertypeMode" xml:space="preserve">
    <value>Overtype Mode</value>
  </data>
  <data name="PinTopBar" xml:space="preserve">
    <value>Pin TopBar</value>
  </data>
  <data name="PointValidationRule.PointFormatInvalidMessage" xml:space="preserve">
    <value>Please enter the point in the format 'X,Y' (for e.g. 50,60).</value>
    <comment>Error message shown when there are problem parsing a string value into a Point</comment>
  </data>
  <data name="PointValidationRule.PointOutOfRangeMessage" xml:space="preserve">
    <value>Please enter X,Y values in the range {0} - {1}.</value>
    <comment>Error message shown when a point's X or Y values goes out of int32 range</comment>
  </data>
  <data name="PointValidationRule.StringConvertionErrorMessage" xml:space="preserve">
    <value>Value cannot be coverted to string.</value>
    <comment>Error message shown when there is problem in converting an object into a string</comment>
  </data>
  <data name="RestoreDefaultItem" xml:space="preserve">
    <value>Restore Default</value>
  </data>
  <data name="RestoreDefaultItemDescription" xml:space="preserve">
    <value>Restores the windows default flyout and safely quits this app</value>
  </data>
  <data name="SessionControl.MoreControls" xml:space="preserve">
    <value>More Controls</value>
  </data>
  <data name="SessionControl.Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="SessionControl.Pause" xml:space="preserve">
    <value>Pause</value>
  </data>
  <data name="SessionControl.Play" xml:space="preserve">
    <value>Play</value>
  </data>
  <data name="SessionControl.Previous" xml:space="preserve">
    <value>Previous</value>
  </data>
  <data name="SessionControl.RepeatAll" xml:space="preserve">
    <value>Repeat: all</value>
  </data>
  <data name="SessionControl.RepeatOff" xml:space="preserve">
    <value>Repeat: off</value>
  </data>
  <data name="SessionControl.RepeatOne" xml:space="preserve">
    <value>Repeat: one</value>
  </data>
  <data name="SessionControl.ShuffleOff" xml:space="preserve">
    <value>Shuffle: off</value>
  </data>
  <data name="SessionControl.ShuffleOn" xml:space="preserve">
    <value>Shuffle: on</value>
  </data>
  <data name="SessionControl.Stop" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="SessionControl.TimelineInfo" xml:space="preserve">
    <value>Timeline Info</value>
  </data>
  <data name="Settings.Additional" xml:space="preserve">
    <value>Additional</value>
  </data>
  <data name="Settings.Behavior" xml:space="preserve">
    <value>Behavior</value>
  </data>
  <data name="Settings.DefaultFlyout" xml:space="preserve">
    <value>Default Flyout</value>
  </data>
  <data name="Settings.DefaultFlyoutDescription" xml:space="preserve">
    <value>Select the default flyout</value>
  </data>
  <data name="Settings.DefaultFlyoutWarningMessage" xml:space="preserve">
    <value>Choosing the Windows Default Flyout as default won't close this app. This app will still keep running in the background. Please exit this app safely to improve performance.</value>
  </data>
  <data name="Settings.Disabled" xml:space="preserve">
    <value>Disabled</value>
  </data>
  <data name="Settings.Enabled" xml:space="preserve">
    <value>Enabled</value>
  </data>
  <data name="Settings.FlyoutBackgroundOpacity" xml:space="preserve">
    <value>Flyout Background Opacity</value>
  </data>
  <data name="Settings.FlyoutDefaultPosition" xml:space="preserve">
    <value>Flyout Default Position (for Align button)</value>
  </data>
  <data name="Settings.FlyoutDefaultPositionDescription" xml:space="preserve">
    <value>Type the position in 'X,Y' format (for e.g. 50,60)</value>
  </data>
  <data name="Settings.FlyoutTopBar" xml:space="preserve">
    <value>Flyout TopBar</value>
  </data>
  <data name="Settings.Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="Settings.LanguageDescription" xml:space="preserve">
    <value>Please restart the app to change the language properly</value>
  </data>
  <data name="Settings.MaxVerticalSessionControlsCount" xml:space="preserve">
    <value>Maximum Number of Media Session Controls to show vertically</value>
  </data>
  <data name="Settings.Modules" xml:space="preserve">
    <value>Modules</value>
  </data>
  <data name="Settings.Modules.Airplane" xml:space="preserve">
    <value>AirplaneMode-flyout Module</value>
  </data>
  <data name="Settings.Modules.Audio" xml:space="preserve">
    <value>Audio-flyout Module</value>
  </data>
  <data name="Settings.Modules.Brightness" xml:space="preserve">
    <value>Brightness-flyout Module</value>
  </data>
  <data name="Settings.Modules.LockKeys" xml:space="preserve">
    <value>LockKeys-flyout Module</value>
  </data>
  <data name="Settings.RunAtStartup" xml:space="preserve">
    <value>Run at startup</value>
  </data>
  <data name="Settings.SessionsPanelOrientation" xml:space="preserve">
    <value>Media Sessions Panel Orientation</value>
  </data>
  <data name="Settings.ShowGSMTCInVolumeFlyout" xml:space="preserve">
    <value>Show Global System Media Transport (Media) Controls in Volume flyout</value>
  </data>
  <data name="Settings.ShowVolumeControlInGSMTCFlyout" xml:space="preserve">
    <value>Show Volume control in Global System Media Transport (Media) Controls flyout</value>
  </data>
  <data name="Settings.SystemDefault" xml:space="preserve">
    <value>System Default</value>
  </data>
  <data name="Settings.TrayIconMode" xml:space="preserve">
    <value>Tray Icon Mode</value>
  </data>
  <data name="Settings.TrayIconMode.Colored" xml:space="preserve">
    <value>Colored</value>
  </data>
  <data name="Settings.TrayIconMode.Monochrome" xml:space="preserve">
    <value>Monochrome</value>
  </data>
  <data name="SettingsItem" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="SettingsItemDescription" xml:space="preserve">
    <value>Open settings window</value>
  </data>
  <data name="UnpinTopBar" xml:space="preserve">
    <value>Unpin TopBar</value>
  </data>
</root>